print('hello, world')
x = 10
if x < 20:                # Формування блоків - починається з ":"                  
    print('x')            # межі блоку задаються відступами                      
    print('Less than')    # відступи "набираються" пробілами без "\t"                             
    print(20)             # блок завершується зміною відступу                      
else:
  print('x')            # величина відступу ролі не грає (цей блок - 2)                      
  print('Less than')    # пробіли, попередній - 4). Кількість обирають                             
  print(20)             # у відповідності до цільності коду
                        # Рекомендація - після блочних операторів            
x = 1j                  # залишати порожній рядок, між функціями/класами     
y = 2 + 3j              # два порожні рядки
print('x * y =', x * y) # у Python гарна підтримка математики, зокрема,
                        # комлпексних та великих чисел
print(2 ** 128)         #
'''
    Потрійнй лапки задають довгі (багаторядкові) літерали,
    а також вживаються для довгих коментарів
'''
# Типізація у Python динамічна але "на запис" - під час запису значення
# його тип фіксується доки не буде змінений наступним записом
x = "12" # зафіксовано, що x - string (до того був - complex)
# print(x + 1) # TypeError: can only concatenate str (not "int") to str
print (int(x) +1) # 13 -- змышування типів автоматично не вирішується
print (x + str(1)) # 121 -- потрібне явне перетворення

x = 12 # зміна типу даних - новий запис
print (x + 1) # 13
# print (x + str(1)) # TypeError: unsupported operand type(s) for +: 'int' and 'str' 

# Введення даних (зі стандартного потоку) 
x = input("Введіть х = ") # з потоку дані приходять як str
print(f"Ви ввели: " + x) # тому це не спричинює помилок конкатенації
x = int(x) # без цього порівняння видасть помилку
if x < 10:
    print ("< 10")
elif x < 20:
    print("10..19")
elif x <= 30:
    print("20..30")
else:
    print(">= 10")
    
if x > 0 and x < 10:
    print('1..9')
elif x < 0 or x > 10:
    print("< 0 || > 10")

