Передача параметрів запиту до CGI-скрипту

За технологією CGI скрипт запускається в обособленному оточенні,
у якому сервером створюються змінні оточення (enviroment variables)
а також перехоплюється потік виведення (std::cout) у який іде 
вивід команд типу print(). Цей вивід формує відповідь сервера, тобто
з'являється не на екрані/консолі, а у складі HTML.

Маршрутизація
В Apache маршрутизація "класична" - якщо є файл у директорії, то 
запит до цього файлу або повертає його, або виконує. Перелік файлів 
для виконання задається директивами "AddHandler cgi-script .py"
у налаштуваннях сервера та окремих віртуальних хостів.
Детальніше маршрутизація задається спеціальніми файлом .htaccess
Створюємо такий у корені проєкту
    - Диспетчер доступу
    RewriteEngine on # включаємо марщрутизацію
    RewriteRule .* index.py [END,QSA]  # всі запити на index.py
    з такими інструкціями всі запити будуть направлені на index.py
    неважливо існує файл-запит чи ні (тобто на index.py також будуть
    спрямовані запити styl.css, site.js всі картинки тощо).
    з одного боку, це прямо вимагається нормами безпеки "Диспетчер доступу" 
    точки, через яку проходять усі шляхи до функцій системи
    - Іменованний роутинг
        RewriteEngine on
        RewriteRule ^envs$  envs.py     [END,QSA] # ^envs$ - регулярний вираз
        RewriteRule ^home$  home.py     [END,QSA] # Якщо запит проходить регулярку,
        RewriteRule ^shop$  shop.py     [END,QSA] # то переходить на заданий скрипт;
        RewriteRule .*      index.py    [END,QSA] # решта - на index.py

    - Параметризований роутинг
        = Багатомовність - запит /uk/envs перетворюється на envs.py?lang=uk
            RewriteRule ^(\w\w)/envs/?$    envs.py?lang=$1     [END,QSA]
        = Ідентифікація - запит /uk/envs/123 ----> envs.py?lang=uk&id=123


Магазин
GET /uk/product  - перелік товарів з назвами відповідною мовою
GET /uk/product/123  - дані про товар id=123 (відповідною мовою)
POST /uk/product/ - сторити товар - повертає id створеного товару
{name:"", price:""}

GET /uk/auth?login=user  -- автентифікація (одержати токен)
POST /uk/auth 
{name:"", login:"", password:""}

GET /uk/cart                 -- кошик користувача з токеном 1234
Authorization: Bearer 1234
POST /uk/cart/123            -- додати до кошику користувача з токеном 1234
Authorization: Bearer 1234       товар з id=123
PUT, DELETE

Встановити СУБД MySQL (XAMPP) 
Створити скрипти product.py, cart.py, auth.py
Налаштувати роутинг з мовою та ідентифікацією